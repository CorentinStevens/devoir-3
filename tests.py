import numpy as np

def compute_matrices(M, K, h, B):
    # Compute M + h*h*B*K
    matrix1 = M + h**2 * B * K

    # Compute M - 0.5*h*h*(1-2*B)*K
    matrix2 = M - 0.5 * h**2 * (1 - 2 * B) * K

    return matrix1, matrix2

# Example matrices (replace with your actual data)
M = np.array([
    [0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.08, 0.00, 0.33, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.08, 0.00, 0.33, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.04, 0.00, 0.08, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.04, 0.00, 0.08, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00],
    [0.04, 0.00, 0.08, 0.00, 0.00, 0.00, 0.17, 0.00, 0.00, 0.00],
    [0.00, 0.04, 0.00, 0.08, 0.00, 0.00, 0.00, 0.17, 0.00, 0.00],
    [0.00, 0.00, 0.08, 0.00, 0.04, 0.00, 0.04, 0.00, 0.17, 0.00],
    [0.00, 0.00, 0.00, 0.08, 0.00, 0.04, 0.00, 0.04, 0.00, 0.17]
])

K = np.array([
    [1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.00, 2.62, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.00, 0.00, 5.12, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00],
    [0.00, 0.00, -0.65, 0.42, 0.00, 0.00, 0.65, 0.00, 0.00, 0.00],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00]
])

# Example parameters
h = 0.2
B = 2.0

matrix1, matrix2 = compute_matrices(M, K, h, B)

print("M + h*h*B*K:")
print(matrix1)

print("\nM - 0.5*h*h*(1-2*B)*K:")
print(matrix2)